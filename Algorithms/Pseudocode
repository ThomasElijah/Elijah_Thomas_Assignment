main():
    open "items.csv" as shopping_list_file for reading
    shopping_list = empty list

    item_number = 0
    for each line in shopping_list_file
        item, price, priority, status = strip sentence of invisible character and split sentence on ','
        items = list(item, price, priority, status)
        add items to shopping_list_file
    close shopping_list_file
    display "Shopping List 1.0 - by Elijah Thomas"

    menu = "Menu:(new line)R - List required items(new line)C - List completed items(new line)A - Add new item(new line)M - Mark an item as completed(new line)Q - Quit"
    display menu and get menu_input
    repeat while menu_input in uppercase != "Q"
        if menu_input in uppercase == "R"
            print_matching_items(shopping_list, 'r')



        otherwise if menu_input in uppercase == "C"
            print_matching_items(shopping_list, 'c')



        otherwise if menu_input in uppercase == "A"
            display "Item name:" and get new_item
            while new_item is blank or white space
                display "Input can not be blank\nItem name:" and get new_item
            run = True
            repeat while run == True
                try to do
                    display "Price: $" and get new_item_price as a float
                    test_value = squareroot(new_item_price)
                    run = False
                exception if ValueError occurs
                    display "Invalid input; enter a valid number"
                exception
                    display "Invalid input; enter a valid number"
            repeat while new_item_price < 0
                display "Price must be >= $0\nPrice: $" and get new_item_price as a float

            run = True
            repeat while run == True
                try to do
                    display "Priority:" and get new_item_priority as an integer
                    test_priority = new_item_priority / 3
                    run = False
                exception if ValueError occurs
                    display "Invalid input; enter a valid number"
                exception
                    display "Priority must be 1, 2 or 3"
            repeat while new_item_priority < 1 or new_item_priority > 3
                display "Priority must be 1, 2 or 3" and get new_item_priority as an integer
            items = list(new_item, new_item_price, new_item_priority, 'r')
            add items to shopping_list
            print_matching_items(shopping_list, 'r' or 'c')



        otherwise if menu_input in uppercase == "M"
            required_index = print_matching_items(shopping_list, 'r')
            if required_index != False
                input_valid = False
                repeat while input_valid == False:
                    try to do
                        display "Enter the number of an item to mark as completed" and get item_completed as an integer
                        test_item_completed = item_completed * 2
                        input_valid = True
                    exception if ValueError occurs
                        display"Invalid input: Enter a number"
                    exception
                        display "Invalid input: Enter a number"
                repeat while item_completed < 0 or item_completed > length of shopping_list
                    display "Invalid item number: Enter a number" and get item_completed as an integer
                actual_index = required_index[item_completed]
                shopping_list[actual_index][3] = "c"
                display shopping_list[actual_index][0], "marked as completed"



        otherwise
            display "Invalid menu choice"


        display menu and get menu_input

    open "items.csv" as shopping_list_file for writing
    for each item in shopping_list
        if item is not shopping_list[-1]
            write (item[0],item[1], item[2], item[3](newline character)) to shopping_list_file
        otherwise
            write (item[0], item[1], item[2], item[3]) to shopping_list_file
    display length of shopping, "items saved to items.csv(new line character)Have a nice day :)"
    close shopping_list_file

function print_matching_items(list, type):
    total_price = 0
    count = 0
    positions = empty list
    for item in list:
        if item[3] == type
            display count, item[0](take up 20 spaces) + "$" + item[1](take up 6 spaces and two decimals), item[2], item[3])
            count = count + 1
            total_price = total_price + item[1] as a float
            add list.index(item) to positions
    if type == 'c' and count == 0
        display "No completed items"
    otherwise if type == 'r' and count == 0
        display "No required items"
        positions = None
    othewsie
        display "Total expected price for", count, "items: $", total_price(two decimals)
    return(positions)

main()
